

/*
 * Send an email to specified email address, asking user to confirm his email address.
 */
slots.create:wait.anarq.emails.send.reset-password

   /*
    * Sanity checking invocation.
    */
   validators.mandatory:x:@.arguments/*/hash
   validators.mandatory:x:@.arguments/*/full_name
   validators.mandatory:x:@.arguments/*/username
   validators.mandatory:x:@.arguments/*/language
   validators.mandatory:x:@.arguments/*/email
   validators.email:x:@.arguments/*/email

   /*
    * Unsupported language.
    */
   switch:x:@.arguments/*/language
      case:no
      case:en
         // OK language
         .ok
      default
         throw:Unsupported language


   /*
    * Loading text/plain email template file.
    */
   strings.concat
      .:/modules/anarq/private/templates/
      get-value:x:@.arguments/*/language
      .:.reset-password.txt
   wait.io.file.load:x:@strings.concat
   unwrap:x:+
   .email-txt:x:@wait.io.file.load

   /*
    * Loading text/html email template file.
    */
   strings.concat
      .:/modules/anarq/private/templates/
      get-value:x:@.arguments/*/language
      .:.reset-password.html
   wait.io.file.load:x:@strings.concat
   unwrap:x:+
   .email-html:x:@wait.io.file.load

   /*
    * Doing dynamic substitutions in text/plain template.
    */
   config.get:"anarq:domain"
   set-value:x:@.email-txt
      strings.replace:x:@.email-txt
         .:[full_name]
         get-value:x:@.arguments/*/full_name
   set-value:x:@.email-txt
      strings.replace:x:@.email-txt
         .:[domain]
         get-value:x:@config.get
   set-value:x:@.email-txt
      strings.replace:x:@.email-txt
         .:[hash]
         get-value:x:@.arguments/*/hash
   set-value:x:@.email-txt
      strings.replace:x:@.email-txt
         .:[username]
         get-value:x:@.arguments/*/username

   /*
    * Doing dynamic substitutions in text/html template.
    */
   set-value:x:@.email-html
      strings.replace:x:@.email-html
         .:[full_name]
         get-value:x:@.arguments/*/full_name
   set-value:x:@.email-html
      strings.replace:x:@.email-html
         .:[domain]
         get-value:x:@config.get
   set-value:x:@.email-html
      strings.replace:x:@.email-html
         .:[hash]
         get-value:x:@.arguments/*/hash
   set-value:x:@.email-html
      strings.replace:x:@.email-html
         .:[username]
         get-value:x:@.arguments/*/username

   /*
    * Looking up subject for email in translation database.
    */
   wait.mysql.scalar:"select content from translations where `key` = @key and locale = @locale"
      @key:ResetPasswordEmailSubject
      @locale:x:@.arguments/*/language

   /*
    * Substituting recipient and unwrapping all
    * expressions inside of email.
    */
   set-name:x:./*/wait.mail.smtp.send/*/message/*/to/*/name
      get-value:x:@.arguments/*/full_name
   unwrap:x:./*/wait.mail.smtp.send/**

   /*
    * Sending email to user.
    */
   wait.mail.smtp.send
      message
         to
            name:x:@.arguments/*/email
         subject:x:@wait.mysql.scalar
         entity:multipart/alternative
            entity:text/plain
               content:x:@.email-txt
            entity:text/html
               content:x:@.email-html
