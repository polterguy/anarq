
/*
 * Returns SUCCESS if currently logged in user can create a new case
 * within the specified [region].
 *
 * Arguments:
 *
 * [region] - Mandatory argument, defining which region to check.
 */
.arguments
   region:string
auth.ticket.verify:root, admin, moderator, user

/*
 * Doing some basic caching, basically caching for 3 minutes.
 */
http.response.headers.add
   Cache-Control:private, max-age=30

/*
 * Sanity checking invocation.
 */
validators.mandatory:x:@.arguments/*/region
auth.ticket.get

/*
 * Opening database connection, checking if user has created a case
 * newly within the specified region.
 *
 * Notice!
 * The region of 'norge' is specially handled, and only allows for creating
 * one case per day.
 */
wait.mysql.connect:anarq

   /*
    * Asserting user is verified.
    */
   unwrap:x:+/*
   wait.signal:wait.anarq.user.is-verified
      username:x:@auth.ticket.get

   /*
    * Making sure user belongs to region.
    */
   mysql.scalar:select count(*) from users_regions where region = @region and user = @username
      @username:x:@auth.ticket.get
      @region:x:@.arguments/*/region
   if
      eq
         get-value:x:@mysql.scalar
         .:long:0
      .lambda
         return
            result:FAILURE

   /*
    * Checking if user recently created a case.
    *
    * Notice, if [region] is 'norge', we check the last 24 hours.
    */
   strings.trim:x:@.arguments/*/region
   strings.to-lower:x:-
   wait.if
      eq
         get-value:x:@strings.to-lower
         .:norge
      .lambda

         /*
          * The [region] WAS 'norge'.
          *
          * Hence, users are only allowed to create cases once every 24 hours.
          */
         wait.mysql.scalar:@"
select count(*) from cases
   where user = @username and
   region = @region and
   created > date_add(NOW(), interval -24 hour)"
            @username:x:@auth.ticket.get
            @region:x:@strings.to-lower
         if
            eq
               get-value:x:@wait.mysql.scalar
               .:long:0
            .lambda
               return
                  result:SUCCESS
         else
            return
               result:FAILURE

   wait.else

      /*
       * The [region] was NOT 'norge'.
       */
      wait.mysql.scalar:@"
select count(*) from cases
   where user = @username and
   region = @region and
   created > date_add(NOW(), interval -3 hour)"
         @username:x:@auth.ticket.get
         @region:x:@strings.to-lower
      if
         eq
            get-value:x:@wait.mysql.scalar
            .:long:0
         .lambda
            return
               result:SUCCESS
      else
         return
            result:FAILURE
