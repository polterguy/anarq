
/*
 * Updates one record in your database.
 *
 * Arguments
 *
 * - [database] - What database to update a record in
 * - [table] - What table to update a record in
 * - [values] - A list of new columns/values for your updated item
 * - [ids] - A list of IDs uniquely identifying your record
 */
slots.create:magic.db.mysql.update


   /*
    * Sanity checking invocation by making sure caller
    * provided an ID at all, to avoid updating entire table.
    */
   if
      eq
         get-count:x:@.arguments/*/ids/*
         .:int:0
      .lambda
         throw:No IDs given to [magic.db.mysql.update]


   /*
    * Opening up a connection.
    */
   wait.mysql.connect:x:@.arguments/*/database


      /*
       * Parametrizing [mysql.update], first with the [where] parts,
       * extracted from [ids].
       */
      add:x:./*/wait.mysql.update/*/where/*/and
         get-nodes:x:@.arguments/*/ids/*


      /*
       * Then parametrizing [mysql.update] with new values, making
       * sure it does not exist in [ids].
       */
      for-each:x:@.arguments/*/values/*
         get-name:x:@.dp/#
         unwrap:x:+/*/*/exists/0
         if
            not
               exists:x:@.arguments/*/ids/*/{0}
                  .:x:@get-name
            .lambda


               /*
                * Currently iterated value from [values] was not found in [ids].
                */
               add:x:../*/wait.mysql.connect/*/wait.mysql.update/*/values
                  get-nodes:x:@.dp/#


      /*
       * Invoking [mysql.update].
       */
      wait.mysql.update
         table:x:@.arguments/*/table
         values
         where
            and


      /*
       * Returning results to caller.
       */
      unwrap:x:+/*
      return-nodes
         updated-records:x:@wait.mysql.update
