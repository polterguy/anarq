
/*
 * Returns all comments matching the specified argument(s) to caller.
 */
.arguments
   limit:long
   offset:long
   parent:long
.description:Returns all comments that are children of the top level OP post specified as [parent]


/*
 * Sanity checking invocation.
 */
validators.mandatory:x:@.arguments/*/parent
validators.integer:x:@.arguments/*/limit
   min:1
   max:100


/*
 * Connecting to database
 */
data.connect:[generic|anarq]
   database-type:mysql


   /*
    * Parametrising invocation.
    */
   add:x:@data.connect/*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset


   /*
    * Creating path like condition to read invocation.
    */
   .path
   set-value:x:@.path
      strings.concat
         .:/
         format:x:@.arguments/*/parent
            pattern:"{0:000000000}"
         .:/
         .:%


   /*
    * Checking if user is authenticated, and if not we only return public posts.
    */
   auth.ticket.get
   if
      eq
         get-value:x:@auth.ticket.get
         .
      .lambda


         /*
          * Anonymous invocation.
          *
          * Making sure we only return public posts.
          */
         add:x:@data.connect/*/data.read/*/where/*/and
            .
               visibility.eq:public

   else


      /*
       * Authenticated invocation.
       *
       * Making sure we only return public and protected posts.
       */
      add:x:@data.connect/*/data.read/*/where/*/and
         .
            or
               visibility.eq:public
               visibility.eq:protected


   /*
    * Invoking read slot.
    *
    * Notice, by ordering on path, and also adding path as a like condition, we
    * will automatically return all descendants from the specified parent OP post
    * in the correct order.
    */
   data.read
      database-type:mysql
      table:posts
      columns
         id
         created
         user
         path
         parent
         content
      where
         and
            path.like:x:@.path
      order:path
      direction:asc


   /*
    * Returns result to caller.
    */
   return-nodes:x:@data.read/*
