
/*
 * Counts posts in the system according to specified argument(s).
 */
.arguments
   topic.eq:string
   user.eq:string
.description:Counts OP posts in the system according to specified argument(s)


/*
 * Connecting to database.
 */
data.connect:[generic|anarq]
   database-type:mysql


   /*
    * Parametrising invocation.
    */
   add:x:@data.connect/*/data.read/*/where/*
      get-nodes:x:@.arguments/*


   /*
    * Checking if user is authenticated, and if not we only return public posts.
    */
   auth.ticket.get
   if
      eq
         get-value:x:@auth.ticket.get
         .
      .lambda


         /*
          * Making sure we only return public posts.
          */
         add:x:@data.connect/*/data.read/*/where/*/and
            .
               visibility.eq:public

   else


      /*
       * Making sure we only return public and protected posts.
       */
      add:x:@data.connect/*/data.read/*/where/*/and
         .
            or
               visibility.eq:public
               visibility.eq:protected


   /*
    * Invoking read slot.
    */
   data.read
      database-type:mysql
      table:posts
      limit:long:1
      columns
         count(*)
            as:count
      where
         and
            parent


   /*
    * Returning results to caller.
    */
   return-nodes:x:-/*/*
