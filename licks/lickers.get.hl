
/*
 * Returns all users that liked a specific OP post or comment.
 */
.description:Returns all users that liked a specific OP post or comment
.arguments
   id:long


/*
 * Sanity checking invocation.
 */
validators.mandatory:x:@.arguments/*/id


/*
 * Connects to database.
 */
data.connect:[generic|anarq]
   database-type:mysql


   /*
    * Checking if user is authenticated and has confirmed his email,
    * and if not we only return public posts.
    */
   if
      auth.ticket.in-role:root, admin, moderator, guest
      .lambda


         /*
          * Making sure we return public and protected posts.
          */
         add:x:@data.connect/*/data.read/*/where/*/and
            .
               or
                  p.visibility.eq:public
                  p.visibility.eq:protected


         /*
          * Checking if caller should have access to moderated posts.
          */
         if
            auth.ticket.in-role:root, admin, moderator
            .lambda
               add:x:@data.connect/*/data.read/*/where/*/and/*/or
                  .
                     p.visibility.eq:moderated

   else


      /*
       * Making sure we only return public and protected posts.
       */
      add:x:@data.connect/*/data.read/*/where/*/and
         .
            p.visibility.eq:public


   /*
    * Invokes read slot.
    */
   data.read
      database-type:mysql
      table:likes
         as:l
         join:posts
            as:p
            type:inner
            on
               and
                  p.id:l.post_id
      limit:-1
      columns
         l.user
      where
         and
            l.post_id:x:@.arguments/*/id


   /*
    * Verifying above actually returned anything at all.
    */
   if
      not
         exists:x:@data.read/*/*
      .lambda
         response.status.set:404
         return-nodes
            message:"No such post was found, or it doesn't have any likes yet"


   /*
    * Returns results of invocation to caller.
    */
   for-each:x:@data.read/*/*
      set-value:x:+/0/0
         get-value:x:@.dp/#
      add:x:@data.connect/*/return-nodes
         .
            .
   return-nodes
