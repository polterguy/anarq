.arguments
   operator:string
   id.mt:long
   id.lt:long
   id.mteq:long
   id.lteq:long
   id.neq:long
   id.eq:long
   topic.like:string
   topic.mt:string
   topic.lt:string
   topic.mteq:string
   topic.lteq:string
   topic.neq:string
   topic.eq:string
   parent.mt:long
   parent.lt:long
   parent.mteq:long
   parent.lteq:long
   parent.neq:long
   parent.eq:long
   content.like:string
   content.mt:string
   content.lt:string
   content.mteq:string
   content.lteq:string
   content.neq:string
   content.eq:string
   created.mt:date
   created.lt:date
   created.mteq:date
   created.lteq:date
   created.neq:date
   created.eq:date
   user.like:string
   user.mt:string
   user.lt:string
   user.mteq:string
   user.lteq:string
   user.neq:string
   user.eq:string
   visibility.like:string
   visibility.mt:string
   visibility.lt:string
   visibility.mteq:string
   visibility.lteq:string
   visibility.neq:string
   visibility.eq:string
   path.like:string
   path.mt:string
   path.lt:string
   path.mteq:string
   path.lteq:string
   path.neq:string
   path.eq:string
.description:Counts items from your posts table in your [generic|anarq] database according to the specified arguments
.type:crud-count
auth.ticket.verify:root, admin
if
   exists:x:@.arguments/*/operator
   .lambda
      switch:x:@.arguments/*/operator
         case:and
         case:or
            set-name:x:../*/data.connect/*/data.read/*/where/*
               get-value:x:@.arguments/*/operator
         default
            throw:"Unsupported operator, only 'and' and 'or' supported"
data.connect:[generic|anarq]
   database-type:mysql
   add:x:+/+/+
      get-nodes:x:@.arguments/*/operator
   remove-nodes:x:@.arguments/*/operator
   add:x:+/*/where/*
      get-nodes:x:@.arguments/*
   data.read
      database-type:mysql
      table:posts
      columns
         count(*)
            as:count
      where
         and
      limit:long:1
   return-nodes:x:-/*/*
